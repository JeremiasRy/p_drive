services:
  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - ".minio.env"
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data
    command: server /data
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    volumes:
      - ./backend/migrations:/migrations
    develop:
      watch:
        - action: rebuild
          path: ./backend
        - action: restart
          path: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ".backend.env"
    depends_on:
      - minio
      - db
    networks:
      - app-network

  db:
    image: postgres:17.2
    container_name: postgres
    env_file:
      - ".db.env"
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  minio-data:
  postgres-data:
  migrations:
